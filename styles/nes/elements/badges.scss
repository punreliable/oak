@use '../../variables' as variables;
@use '../../pokemon-types' as pokemonTypes;

$color-default-hover: #e7e7e7;
$color-default-shadow: #adafbc;

$color-disabled-normal: #d3d3d3;
$color-disabled-shadow: #adafbc;

$color-primary-normal: #209cee;
$color-primary-hover: #108de0;
$color-primary-shadow: #006bb3;

$color-success-normal: #92cc41;
$color-success-hover: #76c442;
$color-success-shadow: #4aa52e;

$color-warning-normal: #f7d51d;
$color-warning-hover: #f2c409;
$color-warning-shadow: #e59400;

$color-error-normal: #e76e55;
$color-error-hover: #ce372b;
$color-error-shadow: #8c2022;

$background-color: #A8A878;

$default-colors: (
  normal: $background-color,
  hover: #e7e7e7,
  shadow: #adafbc
) !default;
$disabled-colors: (
  normal: #d3d3d3,
  shadow: #adafbc
) !default;
$primary-colors: (
  normal: #209cee,
  hover: #108de0,
  shadow: #006bb3
) !default;
$success-colors: (
  normal: #92cc41,
  hover: #76c442,
  shadow: #4aa52e
) !default;
$warning-colors: (
  normal: #f7d51d,
  hover: #f2c409,
  shadow: #e59400
) !default;
$error-colors: (
  normal: $color-error-normal,
  hover: $color-error-hover,
  shadow: $color-error-shadow
) !default;

@mixin span-style-is-icon($color, $background-color, $display, $width, $font-size) {
  display: $display;
  align-items: center;
  justify-content: center;
  width: $width;
  font-size: $font-size;
  color: $color;
  text-align: center;
  background-color: $background-color;
}

@mixin span-style($color, $background, $option, $width: 50%) {
  position: absolute;
  top: 0;
  width: $width;
  color: $color;
  text-align: center;
  background-color: $background;

  @if $option == left {
    left: 0;
  } @else if $option == right {
    right: 0;
  }
}

@mixin badge-style($color, $background, $option: is-default) {
  $box-shadow-first-two: 0 0.5em $background, 0 -0.5em $background;

  @if $option == is-split {
    &:first-child {
      @include span-style($color, $background, left);

      box-shadow: $box-shadow-first-two, 0 0 $background, -0.5em 0 $background;
    }
    &:last-child {
      @include span-style($color, $background, right);

      box-shadow: $box-shadow-first-two, 0.5em 0 $background, 0 0 $background;
    }
  } @else if $option == is-icon {
    &:first-child {
      @include span-style-is-icon($color, $background, flex, 2.7em, 0.5em);

      position: absolute;
      top: -2.8em;
      left: -2.7em;
      height: 2.7em;
    }
    &:last-child {
      @include span-style-is-icon($color, $background, inline-block, 6em, 0.88em);

      box-shadow: $box-shadow-first-two, 0.5em 0 $background, -0.5em 0 $background;
    }
  } @else {
    &:first-child {
      @include span-style($color, $background, 0, 100%);

      box-shadow: $box-shadow-first-two, 0.5em 0 $background, -0.5em 0 $background;
    }
  }
}

// Default style
.nes-badge, .nesBadge {
  $em: 0.75em;

  position: relative;
  display: inline-block;
  width: $em * 14;
  height: $em * 2.5;
  margin: 0.5em;
  font-size: $em * 1.2;
  white-space: nowrap;
  vertical-align: top;
  user-select: none;

  // Other styles
  // prettier-ignore
  $types:
    "primary" $background-color map-get($primary-colors, "normal"),
    "success" $background-color map-get($success-colors, "normal"),
    "warning" variables.$base-color map-get($warning-colors, "normal"),
    "error" $background-color map-get($error-colors, "normal"), 
    "normal" variables.$color-type-normal-highlight variables.$color-type-normal-shadow,
    "fighting" variables.$color-type-fighting-highlight variables.$color-type-fighting-shadow,
    "flying" variables.$color-type-flying-highlight variables.$color-type-flying-shadow,
    "poison" variables.$color-type-poison-highlight variables.$color-type-poison-shadow,
    "ground" variables.$color-type-ground-highlight variables.$color-type-ground-shadow,
    "rock" variables.$color-type-rock-highlight variables.$color-type-rock-shadow,
    "bug" variables.$color-type-bug-highlight variables.$color-type-bug-shadow,
    "ghost" variables.$color-type-ghost-highlight variables.$color-type-ghost-shadow,
    "steel" variables.$color-type-steel-highlight variables.$color-type-steel-shadow,
    "fire" variables.$color-type-fire-highlight variables.$color-type-fire-shadow,
    "water" variables.$color-type-water-highlight variables.$color-type-water-shadow,
    "grass" variables.$color-type-grass-highlight variables.$color-type-grass-shadow,
    "electric" variables.$color-type-electric-highlight variables.$color-type-electric-shadow,
    "psychic" variables.$color-type-psychic-highlight variables.$color-type-psychic-shadow,
    "ice" variables.$color-type-ice-highlight variables.$color-type-ice-shadow,
    "dragon" variables.$color-type-dragon-highlight variables.$color-type-dragon-shadow,
    "dark" variables.$color-type-dark-highlight variables.$color-type-dark-shadow,
    "fairy" variables.$color-type-fairy-highlight variables.$color-type-fairy-shadow;
  //  "shadow" $color-type-shadow-highlight $color-type-shadow-shadow
  
  
  @each $type in $types {

    &.is-splited, // deprecated. Please use .is-split
    &.is-split {
      & span.is-#{nth($type, 1)} {
        @include badge-style(nth($type, 2), nth($type, 3), is-split);
      }
    }

    &.is-icon {
      width: $em * 7;
      & span.is-#{nth($type, 1)} {
        @include badge-style(nth($type, 2), nth($type, 3), is-icon);
      }
    }

    & span.is-#{nth($type, 1)} {
      @include badge-style(nth($type, 2), nth($type, 3));
    }
    a { 
      color: variables.$color-text;
    }
  }

}

@use '../../variables' as vars;
@use '../base/variables' as nes;
@use '../../mixins' as mixins;

$border-size: 4px;
$color-black: #212529;
$base-color: vars.$color-black !default;

@mixin btn-style($color, $background, $hover-background, $shadow) {
  color: $color;
  background-color: $background;

  &::after {
    position: absolute;
    top: -$border-size;
    right: -$border-size;
    bottom: -$border-size;
    left: -$border-size;
    content: "";
    box-shadow: inset -4px -4px $shadow;
  }

  &:hover {
    color: $color;
    text-decoration: none;
    background-color: $hover-background;

    &::after {
      box-shadow: inset -6px -6px $shadow;
    }
  }

  &:focus {
    box-shadow: 0 0 0 6px rgba($shadow, 0.3);
  }

  &:active:not(.is-disabled)::after {
    box-shadow: inset 4px 4px $shadow;
  }
}

// Default style
.nes-btn {
  @include mixins.compact-rounded-corners();

  position: relative;
  display: inline-block;
  padding: 6px 8px;
  margin: vars.$border-size;
  text-align: center;
  vertical-align: middle;
  // cursor: vars.$cursor-click-url, pointer;
  user-select: none;

  @include btn-style(
    vars.$base-color,
    map-get(nes.$default-colors, "normal"),
    map-get(nes.$default-colors, "hover"),
    map-get(nes.$default-colors, "shadow")
  );

  &:focus {
    outline: 0;
  }

  &.is-disabled,
  &.is-disabled:hover,
  &.is-disabled:focus {
    color: vars.$base-color;
    cursor: not-allowed;
    background-color: map-get(nes.$disabled-colors, "normal");
    box-shadow: inset -4px -4px map-get(nes.$disabled-colors, "shadow");
    opacity: 0.6;
  }

  &.is-disabled:hover::after {
    box-shadow: inset -4px -4px map-get(nes.$disabled-colors, "shadow");
  }

  // Other styles
  // prettier-ignore
  $types:
    "primary" vars.$background-color map-get( nes.$primary-colors, "normal") map-get( nes.$primary-colors, "hover") map-get( nes.$primary-colors, "shadow"),
    "success" vars.$background-color map-get( nes.$success-colors, "normal") map-get( nes.$success-colors, "hover") map-get( nes.$success-colors, "shadow"),
    "warning" vars.$base-color map-get(nes.$warning-colors, "normal") map-get(nes.$warning-colors, "hover") map-get(nes.$warning-colors, "shadow"),
    "error" vars.$background-color map-get( nes.$error-colors, "normal") map-get( nes.$error-colors, "hover") map-get( nes.$error-colors, "shadow"),
    "bug" vars.$background-color map-get(vars.$bug-type-colors, "normal") map-get(vars.$bug-type-colors, "hover") map-get(vars.$bug-type-colors, "shadow"),
    "dark" vars.$background-color map-get(vars.$dark-type-colors, "normal") map-get(vars.$dark-type-colors, "hover") map-get(vars.$dark-type-colors, "shadow"),
    "dragon" vars.$background-color map-get(vars.$dragon-type-colors, "normal") map-get(vars.$dragon-type-colors, "hover") map-get(vars.$dragon-type-colors, "shadow"),
    "electric" vars.$base-color map-get(vars.$electric-type-colors, "normal") map-get(vars.$electric-type-colors, "hover") map-get(vars.$electric-type-colors, "shadow"),
    "fairy" vars.$background-color map-get(vars.$fairy-type-colors, "normal") map-get(vars.$fairy-type-colors, "hover") map-get(vars.$fairy-type-colors, "shadow"),
    "fight" vars.$background-color map-get(vars.$fighting-type-colors, "normal") map-get(vars.$fighting-type-colors, "hover") map-get(vars.$fighting-type-colors, "shadow"),
    "fire" vars.$background-color map-get(vars.$fire-type-colors, "normal") map-get(vars.$fire-type-colors, "hover") map-get(vars.$fire-type-colors, "shadow"),
    "flying" vars.$background-color map-get(vars.$flying-type-colors, "normal") map-get(vars.$flying-type-colors, "hover") map-get(vars.$flying-type-colors, "shadow"),
    "ghost" vars.$background-color map-get(vars.$ghost-type-colors, "normal") map-get(vars.$ghost-type-colors, "hover") map-get(vars.$ghost-type-colors, "shadow"),
    "grass" vars.$background-color map-get(vars.$grass-type-colors, "normal") map-get(vars.$grass-type-colors, "hover") map-get(vars.$grass-type-colors, "shadow"),
    "ground" vars.$base-color map-get(vars.$ground-type-colors, "normal") map-get(vars.$ground-type-colors, "hover") map-get(vars.$ground-type-colors, "shadow"),
    "ice" vars.$background-color map-get(vars.$ice-type-colors, "normal") map-get(vars.$ice-type-colors, "hover") map-get(vars.$ice-type-colors, "shadow"),
    "normal" vars.$base-color map-get(vars.$normal-type-colors, "normal") map-get(vars.$normal-type-colors, "hover") map-get(vars.$normal-type-colors, "shadow"),
    "poison" vars.$background-color map-get(vars.$poison-type-colors, "normal") map-get(vars.$poison-type-colors, "hover") map-get(vars.$poison-type-colors, "shadow"),
    "psychic" vars.$background-color map-get(vars.$psychic-type-colors, "normal") map-get(vars.$psychic-type-colors, "hover") map-get(vars.$psychic-type-colors, "shadow"),
    "rock" vars.$background-color map-get(vars.$rock-type-colors, "normal") map-get(vars.$rock-type-colors, "hover") map-get(vars.$rock-type-colors, "shadow"),
    "steel" vars.$base-color map-get(vars.$steel-type-colors, "normal") map-get(vars.$steel-type-colors, "hover") map-get(vars.$steel-type-colors, "shadow"),
    "water" vars.$background-color map-get(vars.$water-type-colors, "normal") map-get(vars.$water-type-colors, "hover") map-get(vars.$water-type-colors, "shadow");

  @each $type in $types {
    &.is-#{nth($type, 1)} {
      @include btn-style(nth($type, 2), nth($type, 3), nth($type, 4), nth($type, 5));
    }
    &.is#{nth($type, 1)} {
      @include btn-style(nth($type, 2), nth($type, 3), nth($type, 4), nth($type, 5));
    }
  }

  input[type="file"] {
    position: absolute;
    pointer-events: none;
    opacity: 0;
  }
}
